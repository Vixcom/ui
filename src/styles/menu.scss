@use 'sass:selector';
@import 'mixins';

/**
* @Author vixson https://vixson.github.io
* @Description Menu styles which includes:
*              1. side-menu
*              2. full-menu (fullscreen floating)
*              2. float-menu (miniscreen corner floating)
*/

@mixin mini-side-menu-toggled {
  .menu-header {
    .menu-logo {
      display: none;
    }
    .menu-logo-alt {
      display: block;
    }

    .title {
      opacity: 0;
      height: 0;
      margin-bottom: 0;
    }
  }

  nav,
  .nav {
    .item {
      justify-content: center;
    }
  }

  nav,
  .nav,
  .menu-header,
  .menu-footer {
    .item,
    .title {
      .label {
        opacity: 0;
        transform: translateX(100%);
        position: absolute;
      }
    }

    .title {
      border-bottom: thin solid;
      padding: 0;
    }
  }
}

input.main-menu-trigger {
  /* @include absolute-content; */
  position: fixed;
  left: 0;
  top: 0;
  padding: 0;
  margin: 0;
  height: 100%;
  width: 100%;
  transition: background-color 0.5s ease-in;
  border-radius: 0;

  &::after {
    display: none;
  }

  &,
  &::before,
  &::after {
    background-color: transparent;
  }

  &:checked {
    ~,
    ~ * {
      main,
      .page {
        > footer {
          background-color: var(--secondary);
          color: var(--secondary-c);
        }
      }
    }
  }

  &:not(:checked) {
    ~,
    ~ * {
    }
  }
}

.main-menu-toggle {
  position: relative;
  font-size: 120%;
  z-index: 1;
}

.menu-container {
  max-width: 100%;
  overflow: hidden;
}

nav,
.nav,
.menu-header,
.menu-footer,
.menu-container {
  display: flex;
}

.menu-header,
.menu-footer {
  align-items: center;
}

nav,
.nav,
.menu-container {
  flex: 1 1 100%;
  gap: 0.5rem;
}

nav,
.nav {
  .item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.5rem 1rem;
    text-decoration: none;

    .label {
      transition: position 0.25s linear 0.125s, transform 0.25s linear 0.125s,
        opacity 0.5s linear 0.125s;
    }
  }
}

/* Menu */

.main-menu-container {
  position: relative;
  width: 100%;
  height: 100%;
  transition: 0.5s;

  .side-menu {
    nav,
    .nav,
    .menu-container {
      flex-direction: column;
    }
  }

  .menu-logo {
    min-width: 7.5rem;
  }

  .menu-logo-alt {
    display: none;
  }

  &.rtl {
    .page {
      order: -1;
    }
  }

  &:is(body) {
    width: 100vw;
    height: 100vh;
  }

  &:has(> .side-menu) {
    &.grid {
      grid-template-columns: 1fr 4fr;
    }

    > {
      main,
      .page {
        section {
          height: 100%;
          min-height: unset;
        }
      }
    }
  }

  &:not(:has(> .side-menu)) {
    &.flex {
      flex-direction: column;
    }
  }

  &.flex {
    display: flex;

    > .side-menu {
      flex-basis: 25%;
    }
  }

  &.grid {
    display: grid;
    // TODO: set grid direction to `row`
    grid-template-rows: 1fr;

    > .side-menu {
      grid-row: 1 / -1;
    }
  }
}

// FIXME: Grid parent overflow breaks
.main-menu {
  display: flex;
  padding: 0;
  margin: 0;
  transition: transform 0.5s;
  z-index: 1;

  &:not(.side-menu:has(> .menu-snap)) {
    flex-direction: column;
  }

  img {
    max-height: 5rem;
  }

  nav,
  .nav {
    font-size: 120%;

    .item {
      // NOTE: Modify this in implementations
      /* border-radius: inherit; */
      cursor: pointer;
      @include before-content;

      &::before {
        background-color: currentColor;
        opacity: 0;
        transition: opacity 0.5s;
      }

      &.active::before {
        opacity: 0.25;
      }

      &:hover::before {
        opacity: 0.125;
      }

      .label {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
    }
  }

  > .main-menu-toggle {
    font-size: 150%;
  }
}

// TODO: Add menu-snap offset for grid main-menu-container
.menu-snap {
  display: flex;
  overflow: scroll;

  .item {
    padding: 0.125%;
    z-index: 1;
  }
}

// TODO: upgrade: side-menu to edge-menu, This slides menu from all edge of the screen
.side-menu {
  position: relative;
  height: 100%;
  transition: flex-basis 0.5s, transform 0.5s, opacity 0.25s;
  overflow: hidden;

  /* side-menu scrollbar */
  ::-webkit-scrollbar {
    width: 0;
  }

  ::-webkit-scrollbar-thumb {
    background-color: currentColor;
  }

  .menu-header,
  .menu-footer {
    .title {
      transition: height 0.5s linear 0.5s, opacity 0.5s linear 0.5s;
    }
  }
  #{selector.nest('nav, .nav','.item')} {
    min-width: auto;
  }
}

/* Page */

// FIXME: Scrolling breaks
.page,
main {
  display: flex;
  flex-direction: column;
  position: relative;
  width: 100%;
  height: 100%;
  margin: 0;
  flex: 1 1 100%;
  transition: width 0.5s;
  overflow-y: scroll;
  z-index: 0;

  footer {
    background-color: var(--primary);
    color: var(--primary-c);
  }
}

/* Mobile or PC (Tablet Excluded) */
@media (max-width: 576px) or (min-width: 769px) {
}

/* Above Tablets/Mini PC */
@media (min-width: 769px) {
  .main-menu-container {
    .float-menu,
    .full-menu {
      nav,
      .nav {
        overflow-x: scroll;
      }
    }

    #{selector.nest('input.main-menu-trigger:not(:checked)','~,~ *', '.side-menu > .menu-snap')} {
      flex-basis: 25%;
    }

    &.grid:has(> .side-menu:not(.mini)):has(> input.main-menu-trigger:checked) {
      grid-template-columns: 0fr 1fr;
    }

    &.grid:has(> .side-menu.mini):has(> input.main-menu-trigger:checked) {
      grid-template-columns: 1fr 20fr;
      @include mini-side-menu-toggled;
    }

    &.flex {
      input.main-menu-trigger {
        &:checked {
          ~,
          ~ * {
            .side-menu:not(.mini) {
              flex-basis: 0;
              // opacity: 0;
              // padding: 0;
            }
            .side-menu.mini {
              flex-basis: 5%;

              &:has(> .menu-snap) {
                flex-basis: 10%;
              }
              @include mini-side-menu-toggled;
            }
          }
        }
      }
    }
  }
}

/* Above Mobile */
@media (min-width: 577px) {
  .main-menu-container {
    .full-menu,
    .float-menu {
      .menu-container {
        &,
        nav,
        .nav {
          align-items: center;
        }
        nav,
        .nav {
          width: 100%;
          overflow-x: scroll;
        }
      }
    }
  }
}

/* Tablets/Mini PC (Tablet Only) */
@media (min-width: 577px) and (max-width: 768px) {
  // DEBUG: https://sass-lang.com/d/bogus-combinators
  // input.main-menu-trigger:checked {
  //   ~,
  //   ~ * {
  //     @include unify-selector('.main-menu-container.grid', &) {
  //       content: 'trigger in grid';
  //     }
  //   }
  // }

  .main-menu-container {
    // WARN: Browser compatibility on :has pseudo-property

    &.grid:has(> .side-menu):has(> input.main-menu-trigger:not(:checked)) {
      grid-template-columns: 1fr 12fr;
      @include mini-side-menu-toggled;
    }

    &.flex {
      #{selector.nest('input.main-menu-trigger:not(:checked)','~,~ *','.side-menu')} {
        flex-basis: 8.25%;

        &:has(> .menu-snap) {
          flex-basis: 16.5%;
        }

        @include mini-side-menu-toggled;
      }
    }
  }

  .float-menu {
    /* width: 50%; */
  }
}

/* Tablet Below */
@media (max-width: 768px) {
  .main-menu-container {
    #{selector.nest('input.main-menu-trigger:checked','~,~ *', '.side-menu > .menu-snap')} {
      flex-basis: 25%;
    }

    input.main-menu-trigger {
      &:not(:checked) {
        ~,
        ~ * {
          .full-menu,
          .float-menu {
            .menu-container {
              nav,
              .nav {
                max-height: 0;
                max-width: 0;
              }
            }
          }
        }
      }
    }

    .float-menu {
      .menu-container {
        position: fixed;
        bottom: 0;

        &.right,
        &:not(.left) {
          right: 0;
        }

        &.left {
          left: 0;
        }
      }
    }
  }
}

/* Mobile Below */
@media (max-width: 576px) {
  // TODO: Move into main-menu-container
  input.main-menu-trigger {
    &:checked {
      width: 100vw;
      height: 100vh;
      background-color: hsla(var(--black-hs), var(--black-l), 0.2);
      z-index: 1;

      ~,
      ~ * {
        .main-menu {
          &:not(:has(> .menu-snap)) {
            flex-direction: column;
          }

          .menu-header {
            order: -1;
          }
        }

        .side-menu {
          transform: translateX(0);
          opacity: 1;
        }

        %blur-behind {
          --background-color: hsla(
            var(--secondary-hs),
            var(--secondary-l),
            0.125
          );
          background-color: var(--background-color);
          color: var(--secondary-c);
          backdrop-filter: blur(0.75rem);
        }

        .float-menu {
          .menu-container {
            @extend %blur-behind;
          }
        }
        .full-menu {
          @extend %blur-behind;
        }

        .full-menu {
          position: fixed;
          transform: translateY(0);
          opacity: 1;
          font-size: 125%;

          .menu-container {
            background-color: unset;
          }
        }
      }
    }
  }

  .main-menu-container {
    #{selector.nest('input.main-menu-trigger:checked','~,~ *','.main-menu', 'nav, .nav,.menu-container')},
    &.flex {
      flex-direction: column;
    }

    &.grid:has(> .side-menu) {
      grid-template-columns: 1fr;
    }

    #{selector.nest('.main-menu', 'nav, .nav')} {
      overflow-y: scroll;
    }

    .side-menu {
      position: fixed;
      top: 0;
      left: 0;
      bottom: 0;
      width: 80%;
      flex-basis: 80%;
      transform: translateX(-100%);
      opacity: 0;
      box-shadow: 0 0 50px hsla(var(--black-hs), var(--black-l), 0.25);
    }

    .full-menu {
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;

      .menu-header {
        width: 100%;
      }
    }
  }
}
