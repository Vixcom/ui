@charset "UTF-8";
/* Scrollbar - Start */
* {
  scrollbar-color: hsl(var(--muted-hs), calc(var(--muted-l) + 40%)) transparent;
  scrollbar-width: thin;
  cursor: default;
  /* word-break: break-word; */
}

::-webkit-scrollbar {
  -webkit-appearance: none;
  appearance: none;
  width: 0.25rem;
  height: 0.25rem;
  z-index: 1;
}

::-webkit-scrollbar-corner {
  display: none;
}

::-webkit-scrollbar-thumb {
  background-color: hsl(var(--muted-hs), calc(var(--muted-l) + 40%));
  border-radius: 0;
}

::-webkit-scrollbar-track {
  background-color: transparent;
  padding: 0.5rem;
}

::-moz-selection {
  color: var(--white);
  background: hsl(var(--muted-hs), calc(var(--muted-l) + 20%));
}

::selection {
  color: var(--white);
  background: hsl(var(--muted-hs), calc(var(--muted-l) + 20%));
}

/* Scrollbar - End */
body {
  font-family: "AppContent", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  background-color: var(--background-color, --default-c, --white);
  color: var(--default, --white-c);
  font-size: var(--font-size);
  font-weight: normal;
}

h6,
.h6, h5,
.h5, h4,
.h4, h3,
.h3, h2,
.h2, h1,
.h1, .title {
  font-family: "AppTitle", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  font-weight: bold;
  font-size: var(--heading-size);
  /* color: var(--primary); */
}

b {
  font-weight: bold;
}

:disabled,
.disabled,
[disable] {
  cursor: not-allowed;
  filter: grayscale(0.8);
}

.bg-text,
.bg-text-color {
  position: relative;
  display: inline-flex;
}
.bg-text:hover::after,
.bg-text-color:hover::after {
  opacity: 0.125;
}
.bg-text::after,
.bg-text-color::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  background-color: currentColor;
  opacity: 0.055;
  height: 100%;
  width: 100%;
  border-radius: inherit;
  z-index: 0;
}

.is-blur {
  position: relative;
  transition: background-color 0.5s;
}
.is-blur {
  position: relative;
}
.is-blur > * {
  /* position: relative; */
  z-index: 1;
}
.is-blur::before {
  content: "";
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  position: absolute;
  border-radius: inherit;
  top: 0;
  left: 0;
  z-index: 0;
}
.is-blur::before:not(img::before, img::after) {
  content: "";
}
.is-blur::before {
  backdrop-filter: blur(10px);
}

.blur {
  filter: blur(5px);
}

a,
.link {
  color: var(--secondary);
  cursor: pointer;
}
a:hover,
.link:hover {
  color: hsla(var(--secondary-hs), calc(var(--secondary-l) - 10%));
}

a:not(.link) {
  text-decoration: none;
}

.app-icon {
  object-fit: contain;
  width: 4rem;
  height: 4rem;
}

.app-logo {
  display: inline-flex;
  width: 10rem;
  max-width: 100%;
  object-fit: contain;
}

.app-header {
  padding: 1rem 1.5rem;
  display: flex;
  align-items: center;
  position: relative;
  z-index: 1;
}
.app-header.position-sticky, .app-header.sticky {
  position: sticky !important;
  top: 0;
  left: 0;
}
.app-header .app-title {
  margin-bottom: 0;
  font-size: 125%;
}
.app-header img.app-title {
  width: 10rem;
}

.flex-container {
  display: flex;
  flex-wrap: wrap;
  /* align-items: flex-end; */
  margin: 0.5rem 0;
  gap: 0.5rem;
}
.flex-container > * {
  /* align-self: flex-start; */
  margin-bottom: 0;
}

.page-header {
  margin: 1rem 0;
  padding: 0 1rem;
  display: flex;
  align-items: center;
}
.page-header .page-title {
  text-transform: capitalize;
  margin-right: auto;
  margin-bottom: 1rem;
  color: var(--primary);
  font-size: 200%;
  font-weight: normal;
}
.page-header .btn {
  min-width: auto;
}

.section-header {
  display: flex;
  align-items: center;
  margin: 1.5rem 0;
  padding: 0 1.5rem;
}
.section-header.has-arrow::before {
  content: attr(data-arrow-text);
  display: inline-block;
  margin-left: auto;
  font-size: 75%;
  order: 1;
}
.section-header.has-arrow::after {
  content: "ï„…";
  font-family: "FontAwesome";
  margin-left: 1rem;
  order: 2;
  font-size: 90%;
  font-weight: normal;
}
.section-header .section-title {
  margin-right: auto;
  margin-bottom: 1rem;
  font-weight: normal;
  color: var(--primary);
}
.section-header .btn {
  min-width: auto;
}

.row > [class*=col] {
  margin-bottom: 1em;
}
.row > [class*=col] + [class*=col] {
  margin-top: 0;
}
.row > [class*=col] .card {
  height: 100%;
}

.icon {
  display: flex;
  align-items: center;
  justify-content: center;
}

.icon-container {
  display: flex;
  align-items: center;
  justify-content: center;
}
.icon-container:not(.h) {
  flex-direction: column;
}
.icon-container:not(.h) .icon {
  margin: 0.5rem 0;
}
.icon-container.h .icon {
  margin: 0 0.5rem;
}
.icon-container .icon {
  font-size: 150%;
}

[class*=sq-] {
  display: flex;
  align-items: center;
  justify-content: center;
  flex: unset;
  padding: 0;
  /* margin: auto; */
}
[class*=sq-]:not(.h) {
  flex-direction: column;
}
[class*=sq-] img {
  object-fit: contain;
  width: 100%;
}

hr {
  border-top-color: currentColor;
  opacity: 0.5;
}

hr[class*=s-]:not(.default) {
  background-color: transparent !important;
  margin: 0;
  border: 0;
}

.s-sm {
  padding: 0.25rem;
}

.s-1 {
  padding: 0.5rem;
}

.s-2 {
  padding: 0.75rem;
}

.s-3 {
  padding: 1.5rem;
}

.s-4 {
  padding: 2.5rem;
}

.s-5 {
  padding: 5rem;
}

.dropdown-menu-right .dropdown-menu {
  transform: translate(-100%, 0);
}

.dropdown-menu {
  min-width: 12.5rem;
  padding: 0;
  border-radius: 0.5rem;
  box-shadow: var(--card-shadow);
}
.dropdown-menu > :first-child {
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
}
.dropdown-menu > :last-child {
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
}
.dropdown-menu .dropdown-header {
  font-size: unset;
}
.dropdown-menu .dropdown-item {
  padding: 0.75rem 1.25rem;
  margin: 0;
}

*:not(.input) > .input,
*:not(.input) > input {
  background-color: transparent;
  /* margin: 0.25rem 0 1rem; */
  border-radius: 0.25rem;
  border: 1px solid currentColor;
  /* width: 100%; */
}
*:not(.input) > .input:not(.has-addon),
*:not(.input) > input:not(.has-addon) {
  /* align-self: stretch; */
  padding: 0.5rem 1rem;
}
*:not(.input) > .input.has-error,
*:not(.input) > input.has-error {
  border: 1px solid var(--danger);
}

input,
textarea {
  opacity: 0.75;
}
input:focus,
textarea:focus {
  opacity: 1;
}
input::placeholder, input:-ms-input-placeholder, input::-ms-input-placeholder, input:-moz-input-placeholder, input::-moz-input-placeholder, input:-webkit-input-placeholder, input::-webkit-input-placeholder,
textarea::placeholder,
textarea:-ms-input-placeholder,
textarea::-ms-input-placeholder,
textarea:-moz-input-placeholder,
textarea::-moz-input-placeholder,
textarea:-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  display: none;
  color: currentColor;
  opacity: 0.75;
}

ul {
  list-style: none;
  padding-left: 0;
}

label {
  cursor: pointer;
}
label.radio, label.radio-container, label.checkbox, label.checkbox-container {
  display: flex;
  align-items: center;
  margin: 1rem 0;
}
label.radio .label > *, label.radio-container .label > *, label.checkbox .label > *, label.checkbox-container .label > * {
  margin-bottom: 0;
}
label.radio + .radio,
label.radio + .checkbox, label.radio-container + .radio,
label.radio-container + .checkbox, label.checkbox + .radio,
label.checkbox + .checkbox, label.checkbox-container + .radio,
label.checkbox-container + .checkbox {
  margin-top: 1rem;
}
label input ~ .label.off {
  order: -1;
}
label .active,
label input:not(:checked) ~ .label.off,
label input:checked ~ .label:not(.off) {
  color: var(--secondary);
  font-weight: bold;
}
label input[type=radio],
label input[type=checkbox] {
  margin: 0 0.5rem;
}

.bg-primary input[type=checkbox]::before {
  background-color: hsl(var(--muted-hs), calc(var(--muted-l) + 10));
}

input {
  /* &.phone,
  &[type=phone],
  &[type=password] {
    letter-spacing: 2px;
  } */
}
input::-webkit-outer-spin-button, input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type=number] {
  -moz-appearance: textfield;
}
input[type=checkbox] {
  position: relative;
  -webkit-appearance: none;
  appearance: none;
  border: none;
  width: 2rem;
  min-width: 2rem;
  height: 1rem;
  padding: 0 !important;
  margin: 0;
  border-radius: 0.5rem;
  background-color: hsla(var(--white-hs), var(--white-l), 0.5);
  color: unset;
  opacity: 1;
}
input[type=checkbox]::before {
  content: "";
  display: block;
  height: 100%;
  width: 100%;
  opacity: 0.275;
  background-color: currentColor;
  border-radius: inherit;
  transition: width 0.25s ease, opacity 0.25s;
}
input[type=checkbox]::after {
  content: "";
  display: block;
  position: absolute;
  top: 50%;
  left: 0;
  width: 1rem;
  height: 1rem;
  padding: 0.25rem;
  background-color: currentColor;
  border-radius: 50%;
  transform: translate(0, -50%);
  transition: left 0.25s ease, transform 0.25s ease;
}
input[type=checkbox]:checked::before {
  opacity: 0.575;
}
input[type=checkbox]:checked::after {
  left: 100%;
  transform: translate(-100%, -50%);
}
input[type=checkbox].default {
  -webkit-appearance: checkbox;
  appearance: checkbox;
}
input[type=checkbox].default::after, input[type=checkbox].default::before {
  content: unset;
}
input[type=checkbox].switch::before {
  position: absolute;
  left: 0;
  top: 50%;
  height: 50%;
  transform: translateY(-50%);
}
input[type=radio] {
  position: relative;
  -webkit-appearance: none;
  appearance: none;
  color: inherit;
  background-color: transparent;
  border: 0.125rem solid currentColor;
  border-radius: 50%;
  display: inline-block;
  justify-content: center;
  align-items: center;
  width: 1rem !important;
  min-width: 1rem;
  height: 1rem;
  min-height: 1rem;
  padding: 0.125rem !important;
  margin: 0;
}
input[type=radio]::after {
  content: "";
  display: block;
  background-color: currentColor;
  opacity: 0;
  width: 100%;
  /* flex: 1; */
  height: 100%;
  border-radius: inherit;
  transition: opacity 0.25s ease-in;
}
input[type=radio]:hover::after {
  opacity: 0.25;
}
input[type=radio]:checked::after {
  opacity: 1;
}
input[type=search] {
  min-width: 22.5%;
}
input[type=file] {
  display: none;
}

.input {
  display: flex;
  align-items: center;
}
.input.has-addon input,
.input.has-addon .input,
.input.has-addon .addon {
  padding: 0.5rem 1rem;
  margin: 0;
}
.input .addon {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: inherit !important;
  /* font-weight: bold; */
  align-self: stretch;
  min-width: unset;
}
.input .addon:not(:last-child) {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}
.input .addon:not(:first-child) {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}
.input.file {
  border-style: dashed;
  text-align: center;
}
.input.file::before {
  content: attr(data-placeholder);
  display: block;
  width: 100%;
}
.input.p-0 {
  padding: 0;
}
.input.p-0 select {
  padding: 0.75rem 1.25rem;
}
.input input,
.input .input,
.input select {
  border: none;
  width: 100%;
  background-color: transparent;
}

option[disabled]:first-of-type {
  display: none;
}

.h-group {
  flex-wrap: wrap;
}
.h-group label {
  width: 100%;
}

.checkbox-group {
  display: flex;
  justify-content: space-around;
  align-items: center;
  text-transform: capitalize;
  flex-wrap: wrap;
  padding: 1rem;
}
.checkbox-group label {
  display: flex;
  align-items: center;
}
.checkbox-group label + label, .checkbox-group > input[type=checkbox] + input[type=checkbox] {
  margin-top: 1rem;
}

.radio-group {
  display: flex;
  justify-content: space-around;
  align-items: center;
  text-transform: capitalize;
  border-radius: 0.25rem;
  padding: 1rem;
  margin-bottom: 1rem;
}
.radio-group.h-group::before {
  left: unset;
  right: 1rem;
}
.radio-group::before {
  content: attr(data-label);
  display: block;
  position: absolute;
  padding: 0.5rem;
  left: 1rem;
  top: 0;
  transform: translateY(-50%);
  background-color: inherit;
}
.radio-group label {
  display: flex;
  align-items: center;
}

.input-container {
  display: block;
  position: relative;
  width: 100%;
  /* margin-bottom: 1rem; */
  text-align: left;
}
.input-container input + input, .input-container + .input-container {
  margin-top: 0.5rem;
}
.input-container:has(input:invalid) {
  color: var(--danger);
}
.input-container:has(input:focus:empty)::before,
.input-container:has(input:focus:empty) .label, .input-container:has(input:focus:placeholder-shown)::before,
.input-container:has(input:focus:placeholder-shown) .label {
  background-color: var(--primary);
}
.input-container::before,
.input-container .label {
  content: attr(data-label);
  display: block;
  font-weight: bold;
  font-size: 80%;
  /* text-transform: capitalize; */
  margin-bottom: 0.25rem;
  padding-left: 1rem;
  opacity: 0.75;
}
.input-container::after,
.input-container .hint {
  content: attr(data-hint);
  display: none;
  width: 100%;
  padding: 0.25rem;
  font-size: 80%;
}
.input-container.has-error::after,
.input-container.has-error .hint, .input-container.has-warning::after,
.input-container.has-warning .hint, .input-container.show-hint::after,
.input-container.show-hint .hint {
  display: block;
}
.input-container.has-error::after,
.input-container.has-error .hint {
  font-weight: bold;
  color: var(--danger);
}
.input-container.has-error .addon {
  background-color: var(--danger) !important;
  color: var(--white) !important;
}
.input-container.has-error > input,
.input-container.has-error > .input {
  border: 1px solid var(--danger);
}
.input-container.has-warning::after,
.input-container.has-warning .hint {
  /* font-weight: bold; */
  color: var(--warning);
}
.input-container.has-warning input,
.input-container.has-warning .input {
  border: 1px solid var(--warning);
}
.input-container.has-info::after,
.input-container.has-info .hint {
  color: var(--info);
}
.input-container input,
.input-container .input {
  width: 100%;
  /* margin-bottom: 0; */
}

.progress {
  position: relative;
  background-color: transparent;
}
.progress {
  position: relative;
}
.progress > * {
  /* position: relative; */
  z-index: 1;
}
.progress::before {
  content: "";
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  position: absolute;
  border-radius: inherit;
  top: 0;
  left: 0;
  z-index: 0;
}
.progress::before:not(img::before, img::after) {
  content: "";
}
.progress::before {
  opacity: 0.75;
}
.progress.bar {
  position: relative;
}
.progress.bar > * {
  z-index: 1;
}
.progress.bar::after {
  content: "";
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  position: absolute;
  border-radius: inherit;
  top: 0;
  left: 0;
  z-index: 0;
}
.progress.bar::after:not(img::before, img::after) {
  content: "";
}
.progress.bar::after {
  background-color: currentColor;
  transition: width 0.5s;
}
.progress.dotted {
  display: flex;
  min-width: 25%;
  list-style: none;
  position: relative;
  align-items: center;
  justify-content: space-between;
  overflow: hidden;
  gap: 0.125rem;
  /* border-radius: 5rem; */
}
.progress.dotted {
  position: relative;
}
.progress.dotted > * {
  /* position: relative; */
  z-index: 1;
}
.progress.dotted::before {
  content: "";
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  position: absolute;
  border-radius: inherit;
  top: 0;
  left: 0;
  z-index: 0;
}
.progress.dotted::before:not(img::before, img::after) {
  content: "";
}
.progress.dotted::before {
  opacity: 0.125;
  background-color: currentColor;
}
.progress.dotted .dot,
.progress.dotted .item {
  background-color: currentColor;
  border-radius: 50%;
  width: 0.5rem;
  height: 0.5rem;
  z-index: 1;
  position: relative;
}
.progress.dotted .dot + :is(.dot, .item),
.progress.dotted .item + :is(.dot, .item) {
  margin-left: 0.5rem;
}
.progress.dotted .dot.active ~ :is(.dot, .item),
.progress.dotted .item.active ~ :is(.dot, .item) {
  opacity: 0.5;
}

.tabs {
  position: relative;
  margin-bottom: 1rem;
  display: flex;
  overflow-x: scroll;
  flex-wrap: nowrap;
  /* align-items: center; */
  width: 100%;
  padding: 0.125rem 1.25rem;
  gap: 0.5rem;
  /* z-index: 1; */
}
.tabs > .tab {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-transform: capitalize;
  padding: 0.25rem;
  border: none;
  border-radius: 0.25rem;
  /* font-weight: bold; */
  min-width: 5rem;
  flex: 0 0 auto;
  transition: background-color 0.25s;
  z-index: 1;
}
.tabs.pills > .tab {
  border-radius: 5rem;
}
.tabs .tabs.md, .tabs .tabs.overlap, .tabs .tabs.no-scrollbar {
  scrollbar-width: 0;
  margin-bottom: 0;
}
.tabs .tabs.md::-webkit-scrollbar, .tabs .tabs.overlap::-webkit-scrollbar, .tabs .tabs.no-scrollbar::-webkit-scrollbar {
  width: 0;
}
.tabs.overlap {
  position: relative;
}
.tabs.overlap > * {
  z-index: 1;
}
.tabs.overlap::after {
  content: "";
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  position: absolute;
  border-radius: inherit;
  top: 0;
  left: 0;
  z-index: 0;
}
.tabs.overlap::after:not(img::before, img::after) {
  content: "";
}
.tabs.overlap::after {
  background-color: inherit;
}
.tabs.md .tab {
  background-color: transparent !important;
}
.tabs.md .tab.active {
  border-bottom: medium solid;
}
.tabs.md > .tab, .tabs.overlap > .tab {
  margin-bottom: 0;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  padding: 0.25rem 0.5rem;
}
.tabs.md > .tab .label, .tabs.overlap > .tab .label {
  margin: 0.5rem;
}

.tabs-container .tabs .tab {
  position: relative;
}
.tabs-container .tabs .tab::before, .tabs-container .tabs .tab::after {
  content: "";
  position: absolute;
  height: 5%;
  width: 5%;
  bottom: -1px;
}
.tabs-container .tabs .tab::before {
  left: 0;
  transform: translateX(-100%);
  border-top-left-radius: 5%;
}
.tabs-container .tabs .tab::after {
  right: 0;
  transform: translateX(100%);
  border-top-left-radius: 5%;
}
.border-dashed {
  border-style: dashed !important;
}
.border-current {
  border-color: currentColor !important;
}

.badge {
  display: inline-flex;
  align-items: center;
  border-radius: 0.25rem;
  padding: 0.25rem 0.75rem;
  font-size: 80%;
  letter-spacing: 1px;
  text-transform: capitalize;
}

.btn-group,
.btn-group-vertical {
  border-radius: 0.5rem;
}

.btn {
  position: relative;
  padding: 0.25rem 1.5rem;
  font-size: 120%;
  /* font-weight: bold; */
  min-width: 7.5rem;
  display: inline-flex;
  gap: 0.5rem;
  justify-content: center;
  align-items: center;
  /* border: none; */
}
.btn:focus {
  outline: 1px solid hsl(var(--secondary-hs), calc(var(--secondary-l) + 50%));
}
.btn.btn-block {
  width: 100%;
}
.btn.btn-circle {
  width: 3rem;
  height: 3rem;
  display: inline-flex;
  min-width: unset !important;
  padding: 0.5rem;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
}
.btn.btn-circle.btn-sm {
  width: 2rem;
  height: 2rem;
}
.btn.btn-lg {
  font-size: 150%;
  padding: 0.5rem 1.25rem;
  min-width: 10rem;
}
.btn.btn-sm {
  font-size: 80%;
}
.btn.btn-xs {
  font-size: 75%;
  padding: 0.125rem 0.5rem;
  min-width: 5rem;
}
.btn.btn-block + .btn {
  margin-top: 0.5rem;
}

.btn-group {
  /*  margin: 1rem 0; */
  align-items: stretch;
}
.btn-group.no-rounded .btn {
  border-radius: 0;
}
.btn-group .btn {
  border-radius: inherit;
  align-self: stretch;
  margin: 0;
  min-width: unset;
  flex: 1 1 100%;
}

.btn-group-vertical .btn {
  border-radius: inherit;
}

table {
  border-collapse: separate;
  border-spacing: 0;
  width: 100%;
}

.table-container {
  display: flex;
  flex-direction: column;
  padding: 0 0 1rem;
  gap: 1rem;
  width: 100%;
  overflow: scroll;
  scrollbar-width: medium;
}
.table-container::-webkit-scrollbar {
  height: 0.5rem;
}
.table-container.compact {
  font-size: 90%;
}
.table-container.compact thead,
.table-container.compact .table-header {
  font-weight: normal;
}
.table-container.compact tr,
.table-container.compact > .row {
  background-color: inherit !important;
}
.table-container.compact tr + tr, .table-container.compact tr + .row,
.table-container.compact > .row + tr,
.table-container.compact > .row + .row {
  border-top: 0.5px solid;
}
.table-container.compact tr td,
.table-container.compact tr th,
.table-container.compact tr [class*=col],
.table-container.compact > .row td,
.table-container.compact > .row th,
.table-container.compact > .row [class*=col] {
  padding: 0.25rem;
}
.table-container .sticky {
  /* &::after {
      content: '';
      display: block;
      box-shadow: 5px 0px 10px -5px rgba(0, 0, 0, 0.5);
      width: 5%;
      top: 0;
      bottom: 0;
      right: 0;
      position: absolute;
      border-right: thin solid var(--border-color)
    } */
}
.table-container .row {
  flex-wrap: nowrap;
}
.table-container thead th {
  min-width: 15vw;
}
.table-container thead,
.table-container .table-header {
  position: sticky;
  /* color: hsl(var(--secondary-hs), calc(var(--secondary-l) + 10%)); */
  font-weight: bold;
  width: fit-content;
  top: 0;
  bottom: 0;
  z-index: 1;
}
.table-container thead.sticky-header th,
.table-container .table-header.sticky-header th {
  position: sticky;
  position: -webkit-sticky;
  top: 0;
  bottom: 0;
  z-index: 2;
}
.table-container thead.sticky-header th.sticky,
.table-container .table-header.sticky-header th.sticky {
  z-index: 3;
}
.table-container tr,
.table-container > .row,
.table-container .scrollable > .row {
  position: relative;
  border-radius: 0.5rem;
  margin: 0 0 0.25rem;
  width: 100%;
  background-color: inherit;
  z-index: 0;
}
.table-container tr [class*=col],
.table-container > .row [class*=col],
.table-container .scrollable > .row [class*=col] {
  display: flex;
}
.table-container tr td,
.table-container tr th,
.table-container tr [class*=col],
.table-container > .row td,
.table-container > .row th,
.table-container > .row [class*=col],
.table-container .scrollable > .row td,
.table-container .scrollable > .row th,
.table-container .scrollable > .row [class*=col] {
  margin-bottom: 0;
  padding: 1rem;
  background-color: inherit;
  border-radius: 0;
  word-break: break-word;
  /* min-width: 12.5%; */
}
.table-container tr td:first-of-type,
.table-container tr th:first-of-type,
.table-container tr [class*=col]:first-of-type,
.table-container > .row td:first-of-type,
.table-container > .row th:first-of-type,
.table-container > .row [class*=col]:first-of-type,
.table-container .scrollable > .row td:first-of-type,
.table-container .scrollable > .row th:first-of-type,
.table-container .scrollable > .row [class*=col]:first-of-type {
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
}
.table-container tr td:last-of-type,
.table-container tr th:last-of-type,
.table-container tr [class*=col]:last-of-type,
.table-container > .row td:last-of-type,
.table-container > .row th:last-of-type,
.table-container > .row [class*=col]:last-of-type,
.table-container .scrollable > .row td:last-of-type,
.table-container .scrollable > .row th:last-of-type,
.table-container .scrollable > .row [class*=col]:last-of-type {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
}
.table-container tr td.sticky, .table-container tr td.md-sticky,
.table-container tr th.sticky,
.table-container tr th.md-sticky,
.table-container tr [class*=col].sticky,
.table-container tr [class*=col].md-sticky,
.table-container > .row td.sticky,
.table-container > .row td.md-sticky,
.table-container > .row th.sticky,
.table-container > .row th.md-sticky,
.table-container > .row [class*=col].sticky,
.table-container > .row [class*=col].md-sticky,
.table-container .scrollable > .row td.sticky,
.table-container .scrollable > .row td.md-sticky,
.table-container .scrollable > .row th.sticky,
.table-container .scrollable > .row th.md-sticky,
.table-container .scrollable > .row [class*=col].sticky,
.table-container .scrollable > .row [class*=col].md-sticky {
  left: 0;
  right: 0;
  z-index: 1;
  /* &::after {
    content: '';
    display: block;
    box-shadow: 5px 0px 10px -5px rgba(0, 0, 0, 0.5);
    width: 5%;
    top: 0;
    bottom: 0;
    right: 0;
    position: absolute;
    border-right: thin solid var(--border-color);
  } */
}
.table-container tr td.text-truncate,
.table-container tr th.text-truncate,
.table-container tr [class*=col].text-truncate,
.table-container > .row td.text-truncate,
.table-container > .row th.text-truncate,
.table-container > .row [class*=col].text-truncate,
.table-container .scrollable > .row td.text-truncate,
.table-container .scrollable > .row th.text-truncate,
.table-container .scrollable > .row [class*=col].text-truncate {
  /* max-width: 15vw; */
}
.table-container tr td p,
.table-container tr th p,
.table-container tr [class*=col] p,
.table-container > .row td p,
.table-container > .row th p,
.table-container > .row [class*=col] p,
.table-container .scrollable > .row td p,
.table-container .scrollable > .row th p,
.table-container .scrollable > .row [class*=col] p {
  margin-bottom: 0;
}
.table-container tr .table-badge,
.table-container > .row .table-badge,
.table-container .scrollable > .row .table-badge {
  position: absolute;
  top: 0;
  right: 1rem;
  transform: translateY(-50%);
}

/* Modal Backdrop - Start */
.modal-backdrop .show {
  opacity: 0.25;
}

/* Modal Close Button - End */
/* Scrollable Container - Start */
.scroll-container {
  position: relative;
  display: flex;
  flex-direction: column;
  height: 100%;
  overflow: hidden;
}

.scrollable {
  position: relative;
  height: 100%;
  /* flex: 1 1 auto; */
  overflow-y: scroll;
  overflow-x: hidden;
}
.scrollable.h {
  display: flex;
  flex-direction: row;
  width: 100%;
  flex-wrap: nowrap;
  justify-content: space-between;
  overflow-x: scroll;
  overflow-y: hidden;
}

/* Scrollable Container - End */
.overflow-hidden {
  overflow: hidden;
}

.flex-none {
  flex: unset;
}

.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}
.flex-center:not(.h) {
  flex-direction: column;
}

.flex-align-center {
  display: flex;
}
.flex-align-center.h {
  align-items: center;
}
.flex-align-center:not(.h) {
  flex-direction: column;
  justify-content: center;
}

.flex-start {
  display: flex;
  justify-content: start;
  align-items: start;
}

.flex-item,
.flex-card {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: center;
  /* overflow: hidden; */
}
.flex-item.flex-card,
.flex-card.flex-card {
  border: 1px solid var(--border-color);
  border-radius: 0.5rem;
  background-clip: border-box;
}
.flex-item.flex-card [class*=bg-],
.flex-card.flex-card [class*=bg-] {
  border: none;
}
.flex-item.flex-card.has-bg::before,
.flex-item.flex-card .bg-svg,
.flex-card.flex-card.has-bg::before,
.flex-card.flex-card .bg-svg {
  content: "";
  display: block;
  position: absolute;
  height: 100%;
  width: 100%;
  background-color: inherit;
  z-index: 0;
}
.flex-item.flex-card .bg-svg,
.flex-card.flex-card .bg-svg {
  -webkit-mask-image: url("/assets/bg/flex-card-bg-icons.svg");
  mask-image: url("/assets/bg/flex-card-bg-icons.svg");
}
.flex-item .img,
.flex-item .icon,
.flex-card .img,
.flex-card .icon {
  position: relative;
  display: flex;
  flex-direction: column;
  align-self: stretch;
  justify-content: center;
  object-fit: cover;
  text-align: center;
  font-size: 200%;
  z-index: 1;
}
.flex-item .img,
.flex-card .img {
  flex: 1 1 40%;
  width: 40%;
  border-radius: inherit;
}
.flex-item .icon,
.flex-card .icon {
  flex: 1 1 25%;
  width: 25%;
  /* padding-left: 0.75rem; */
  /* font-weight: bold; */
}
.flex-item .addon,
.flex-card .addon {
  align-self: stretch;
  flex: 1 1 25%;
  width: 25%;
}
.flex-item .addon > *,
.flex-card .addon > * {
  flex: 1 1 auto;
}
.flex-item .content,
.flex-card .content {
  position: relative;
  margin: 0;
  padding: 0.75rem;
  flex: 1 1 100%;
  width: 100%;
  z-index: 1;
}
.flex-item .img img,
.flex-card .img img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.text-spaced {
  letter-spacing: 0.25rem;
}
.text-spaced.s-1 {
  letter-spacing: 0.5rem;
}

.title-strick,
.text-strick-line {
  display: flex;
  align-items: center;
  justify-content: center;
}
.title-strick .label, .title-strick::content,
.text-strick-line .label,
.text-strick-line::content {
  width: 100%;
}
.title-strick::before, .title-strick::after,
.text-strick-line::before,
.text-strick-line::after {
  content: "";
  display: inline-block;
  margin: 0 0.5rem;
  width: 100%;
  height: 1px;
  max-width: 10rem;
  background-color: currentColor;
}

.card {
  position: relative;
}
.card > * {
  /* position: relative; */
  z-index: 1;
}
.card::before {
  content: "";
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  position: absolute;
  border-radius: inherit;
  top: 0;
  left: 0;
  z-index: 0;
}
.card::before:not(img::before, img::after) {
  content: "";
}
.card:not(.flat) {
  /* overflow: unset; */
  border: none;
  z-index: 0;
}
.card:not(.flat) > * {
  /* position: relative; */
}
.card:not(.flat)::before {
  box-shadow: var(--card-shadow);
}
.card + .card {
  margin-top: 1rem;
}
.card:not(.card-body) > :first-child[class*=card-] {
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
}
.card:not(.card-body) > :last-child[class*=card-] {
  border-bottom-left-radius: inherit;
  border-bottom-right-radius: inherit;
}
.card .card-title {
  margin: 1rem 0 0.75rem;
}
.card .card-header,
.card .card-footer {
  background-color: transparent;
  border: none;
  padding: 1rem 1.5rem;
}
.card .card-body, .card.card-body {
  padding: 1.5rem;
  /* z-index: 1; */
}
.card .card-body {
  padding: 0 1.5rem;
}
.card .card-body .card-img {
  margin: 0 -1.5rem;
  width: unset;
}
.card .card-img {
  max-height: 15rem;
  object-fit: cover;
  overflow: overlay;
  min-width: 100%;
}
.card .card-header,
.card .card-footer {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.flex-list,
.item-list {
  margin: 1.5rem 0;
  list-style: none;
  display: flex;
}
.flex-list:not(.has-connector),
.item-list:not(.has-connector) {
  gap: 0.5rem;
}
.flex-list.h .item,
.item-list.h .item {
  flex-direction: column;
}
.flex-list.has-connector .item,
.item-list.has-connector .item {
  margin: 0;
}
.flex-list.has-connector .item:not(:first-child) :is(.connector, li::marker)::before, .flex-list.has-connector .item:not(:last-child) :is(.connector, li::marker)::after,
.item-list.has-connector .item:not(:first-child) :is(.connector, li::marker)::before,
.item-list.has-connector .item:not(:last-child) :is(.connector, li::marker)::after {
  content: "";
}
.flex-list.has-connector .item .connector,
.flex-list.has-connector .item li::marker,
.item-list.has-connector .item .connector,
.item-list.has-connector .item li::marker {
  display: flex;
  flex-direction: column;
}
.flex-list.has-connector .item .connector::before, .flex-list.has-connector .item .connector::after,
.flex-list.has-connector .item li::marker::before,
.flex-list.has-connector .item li::marker::after,
.item-list.has-connector .item .connector::before,
.item-list.has-connector .item .connector::after,
.item-list.has-connector .item li::marker::before,
.item-list.has-connector .item li::marker::after {
  margin: 0 auto;
  width: 1px;
  height: 100%;
  background-color: currentColor;
  display: block;
}
.flex-list.has-connector.align-top .item .connector,
.item-list.has-connector.align-top .item .connector {
  justify-content: flex-start;
}
.flex-list.has-connector.align-top .item .connector::before,
.item-list.has-connector.align-top .item .connector::before {
  content: unset;
}
.flex-list:not(.h),
.item-list:not(.h) {
  flex-direction: column;
}
.flex-list:not(.h) .item + .item,
.item-list:not(.h) .item + .item {
  border-top: 1px solid var(--border-color);
}
.flex-list .item,
.item-list .item {
  display: flex;
  /* align-items: center; */
  /* justify-content: space-between; */
  width: 100%;
  gap: 0.25rem;
  padding: 0 1rem;
  cursor: pointer;
}
.flex-list .item .icon,
.item-list .item .icon {
  font-weight: bold;
  /* margin-right: 1.25rem; */
  transition: margin-right 0.125s linear;
}
.flex-list .item .content + .content,
.item-list .item .content + .content {
  margin-top: 0.5rem;
}
.flex-list .item:hover .icon,
.item-list .item:hover .icon {
  /* margin-right: 1.5rem; */
}

.link-list {
  margin: 0;
  /* padding: 0.5rem; */
  list-style: none;
  font-size: 110%;
}
.link-list .item {
  display: flex;
  align-items: center;
  padding: 0.5rem 0.75rem;
  border-radius: 0.25rem;
  width: 100%;
  border: 1px solid var(--border-color);
  color: var(--primary);
  background-color: transparent;
  cursor: pointer;
}
.link-list .item ~ .item {
  margin-top: 1rem;
}

.list .item + .item {
  padding-top: 1rem;
  border-top: 1px solid var(--border-color);
}

.stacked {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.stacked.h .item + .item {
  margin-left: -25%;
}
.stacked:not(.h) {
  flex-direction: column;
}
.stacked:not(.h) .item + .item {
  margin-top: -25%;
}
.stacked.backwards {
  flex-direction: row-reverse;
}
.stacked.backwards:not(.h) {
  flex-direction: column-reverse;
}
.stacked .item {
  position: relative;
  z-index: 1;
}

.modal-content .modal-header {
  justify-content: flex-start;
  border-bottom: 2px solid var(--primary);
}
.modal-content .modal-header:hover .close {
  opacity: 1;
}
.modal-content .modal-header .close {
  margin: 0;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  display: inline-flex;
  width: 1.5rem;
  height: 1.5rem;
  font-size: 200%;
  padding: 0;
  min-width: unset;
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  opacity: 0.125;
  transition: color 0.25s, opacity 0.25s;
}
.modal-content .modal-header .close:hover {
  color: var(--danger);
}
.modal-content .modal-header .close::after, .modal-content .modal-header .close::before {
  content: "";
  height: 0.125rem;
  width: 75%;
  display: block;
  background-color: currentColor;
  position: absolute;
  top: 50%;
  left: 50%;
  transform-origin: center;
  transform: translate(-50%, -50%);
  transition: transform 0.2s ease-out;
}
.modal-content .modal-header .close:hover::after {
  transform: translate(-50%, -50%) rotate(45deg);
}
.modal-content .modal-header .close:hover::before {
  transform: translate(-50%, -50%) rotate(-45deg);
}
.modal-content .modal-body {
  padding: 1rem 2rem;
}
.modal-content .modal-footer {
  border-top: none;
  padding: 1rem 2rem 2rem;
  justify-content: space-between;
}

.accordion-tab {
  display: flex;
  cursor: pointer;
  width: 100%;
}
.accordion-tab ~ .accordion-tab {
  margin-top: 1rem;
}
.accordion-tab .icon {
  align-self: flex-start;
}

img {
  max-width: 100%;
}

.img-fullwidth {
  margin: 0 -1.25rem;
  width: 100vw;
  min-width: 100vw;
  height: 12.5rem;
  object-fit: cover;
}

.img-circle {
  width: 100%;
  border-radius: 50%;
  width: 4rem;
  height: 4rem;
  display: flex;
  overflow: hidden;
}
.img-circle img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: inherit;
}

.img-bg {
  content: "";
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  position: absolute;
  border-radius: inherit;
  top: 0;
  left: 0;
  z-index: 0;
  object-fit: cover;
}
.img-bg:not(img::before, img::after) {
  content: "";
}

.has-bg {
  position: relative;
}
.has-bg > * {
  z-index: 1;
}
.has-bg::after {
  content: "";
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  position: absolute;
  border-radius: inherit;
  top: 0;
  left: 0;
  z-index: 0;
}
.has-bg::after:not(img::before, img::after) {
  content: "";
}
.has-bg > .img-bg {
  z-index: 0;
  position: absolute;
}
.has-bg::after {
  background-color: hsla(var(--black-hs), var(--black-l), 0.5);
}

.rounded-inherit {
  border-radius: inherit;
}

.sticky {
  position: sticky;
  position: -webkit-sticky;
}

[class*=position-].left {
  left: 0;
}
[class*=position-].right {
  right: 0;
}
[class*=position-].top {
  top: 0;
}
[class*=position-].bottom {
  bottom: 0;
}
[class*=position-].all, [class*=position-].spread {
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}

[class*=float-] {
  z-index: 1;
}

.section,
section {
  position: relative;
  min-height: 100vh;
  padding: 1.25rem;
}

@media (min-width: 576px) {
  .md-sticky {
    position: sticky;
  }
}
/* ABOVE <-- Tablets/Mini PC */
@media (min-width: 768px) {
  .item-list .item > .value {
    margin-left: 1rem;
    text-align: right;
  }

  .table-container .row .table-header {
    display: none;
  }
}
/* Tables/Mini PC <---> BELOW */
@media (max-width: 767.98px) {
  .page-header,
.section-header {
    padding: 0;
    flex-wrap: wrap;
  }
  .page-header input[type=search],
.section-header input[type=search] {
    width: 100%;
  }
  .page-header .tabs,
.section-header .tabs {
    justify-content: space-between;
  }

  .flex-container {
    /* flex-direction: column; */
    width: 100%;
  }
  .flex-container .btn {
    width: 100%;
  }

  .tabs {
    padding: 1.25rem 0.125rem;
  }
  .tabs.overlap {
    padding: 0;
  }

  .table-container:not(.is-sticky) .row.table-header {
    display: none;
  }
  .table-container.is-sticky .row .table-header {
    display: none;
  }
  .table-container.is-sticky .row [class*=col] {
    margin: 0;
  }
  .table-container > .row .table-header,
.table-container .scrollable > .row .table-header {
    margin-right: 1rem;
  }
  .table-container > .row [class*=col],
.table-container .scrollable > .row [class*=col] {
    flex-direction: row;
    justify-content: flex-start;
    margin: 0.5rem 0;
  }
}
/* Mobile <---> BELOW */
@media (max-width: 575.98px) {
  .card {
    width: 100%;
  }

  .item-list:not(.has-connector) {
    gap: 1rem;
  }
  .item-list .item {
    flex-direction: column;
    gap: 0.5rem;
  }

  .table-container td {
    min-width: fit-content;
    max-width: 75%;
  }
}

/*# sourceMappingURL=app.css.map */
